name: CI

on: [push]

jobs:
  linux_macos_build:
    name: Build (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: linux,
            os: ubuntu-latest,
          }
          - {
            name: darwin,
            os: macos-latest,
          }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel

      - name: Download GraalVM JDK 11
        run: wget -nv https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java11-${{ matrix.config.name }}-amd64-20.1.0.tar.gz

      - name: Set up GraalVM JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
          jdkFile: graalvm-ce-java11-${{ matrix.config.name }}-amd64-20.1.0.tar.gz

      - name: Fix JAVA_HOME on MacOS
        if: matrix.config.os == 'macos-latest'
        run: mv $JAVA_HOME/Contents/Home/* $JAVA_HOME/

      - name: Install GraalVM Native Image
        run: gu install --no-progress native-image

      - name: Build package
        run: python setup.py bdist_wheel

      - name: Install package
        run: python -m pip install dist/*.whl --user

      - name: Fix rpath on MacOS
        if: matrix.config.os == 'macos-latest'
        run: |
          libGridpyJavaPath=$(otool -L $HOME/.local/lib/python3.7/site-packages/gridpy.cpython-37m-darwin.so | grep gridpy-java.dylib | cut -f 1 -d " ")
          install_name_tool -id "@loader_path/libgridpy-java.dylib" $HOME/.local/lib/python3.7/site-packages/libgridpy-java.dylib
          install_name_tool -change $libGridpyJavaPath "@loader_path/libgridpy-java.dylib" $HOME/.local/lib/python3.7/site-packages/gridpy.cpython-37m-darwin.so

      - name: Run tests
        run: python -m unittest tests/test.py

  windows_build:
    name: Build (windows)
    runs-on: windows-latest
    env:
      VCVARS_BAT: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel

      - name: Install wget
        run: choco install wget --no-progress

      - name: Download GraalVM JDK 11
        run: wget -nv https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java11-windows-amd64-20.1.0.zip

      - name: Set up GraalVM JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
          jdkFile: graalvm-ce-java11-windows-amd64-20.1.0.zip

      - name: Install GraalVM Native Image
        shell: cmd
        run: |
          call "%JAVA_HOME%\bin\gu" install --no-progress native-image
          call "%VCVARS_BAT%"
          call "%JAVA_HOME%\bin\native-image.cmd" -jar "%JAVA_HOME%\lib\graalvm\svm-driver.jar" -H:Path="%JAVA_HOME%\bin"

      - name: Build package
        run: python setup.py bdist_wheel

      - name: Install package
        run: python -m pip install dist/*.whl --user

      - name: Run tests
        run: python -m unittest tests/test.py
