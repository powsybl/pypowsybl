name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_24_x86_64
    strategy:
      matrix:
        python:
          - {
            name: cp39,
            abi: cp39,
            version: '3.9',
          }

    steps:
      - name: Install Linux packages
        run: |
          apt-get update
          apt install -y maven zlib1g-dev

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '11'
          components: 'native-image'

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        run: |
          python3 setup.py bdist_wheel
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Run tests
        working-directory: ./tests # Run in subdir to use installed lib, not sources
        run: |
          pytest --cov=pypowsybl --cov-report xml:../coverage.xml --cov-report term --cov-config=../.coveragerc


      - name: Generate coverage
        run: |
          python3 setup.py develop
          pytest --cov=pypowsybl --cov-report xml --cov-report term tests/

      - name: Sonar analysis
        if: matrix.python.name == 'cp39'
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: pypowsybl-wheel-linux-${{ matrix.python.name }}
          path: wheelhouse/*.whl
