name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python:
          - {
            name: cp37,
            abi: cp37m,
            version: '3.7',
          }
          - {
            name: cp38,
            abi: cp38,
            version: '3.8',
          }
          - {
            name: cp39,
            abi: cp39,
            version: '3.9',
          }

    steps:
      - name: Install Linux packages
        run: yum install -y rh-maven33-maven zlib-devel.x86_64

      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.3.0
          native-image: true

#      - name: Checkout olf sources
#        uses: actions/checkout@v1
#        with:
#          repository: powsybl/powsybl-open-loadflow
#          ref: main
#
#      - name: Build and install olf artifact
#        run: scl enable rh-maven33 'mvn --batch-mode -DskipTests=true --file ../powsybl-open-loadflow/pom.xml install'

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        run: |
          scl enable rh-maven33 'python3 setup.py bdist_wheel'
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Run tests
        run: |
          coverage run -m unittest discover --start-directory tests
          coverage xml

      - name: Sonar analysis
        if: matrix.python.name == 'cp39'
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: pypowsybl-wheel-linux-${{ matrix.python.name }}
          path: wheelhouse/*.whl

  macos_windows_build:
    name: Build ${{ matrix.config.name }} ${{ matrix.python.name }} wheel
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: darwin,
            os: macos-10.15,
          }
          - {
            name: windows,
            os: windows-2019,
          }
        python:
          - {
            name: cp37,
            version: '3.7',
          }
          - {
            name: cp38,
            version: '3.8',
          }
          - {
            name: cp39,
            version: '3.9',
          }

    steps:
      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.3.0
          native-image: true

#      - name: Checkout olf sources
#        uses: actions/checkout@v1
#        with:
#          repository: powsybl/powsybl-open-loadflow
#          ref: main
#
#      - name: Build and install olf artifact
#        run: mvn --batch-mode -DskipTests=true --file ../powsybl-open-loadflow/pom.xml install

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build wheel
        run: python setup.py bdist_wheel

      - name: Build source archive
        if: matrix.config.name == 'darwin' && matrix.python.name == 'cp39'
        run: python setup.py sdist

      - name: Install wheel
        shell: bash
        run: python -m pip install dist/*.whl --user

      - name: Run tests
        run: python3 -m unittest discover --start-directory tests

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: pypowsybl-wheel-${{ matrix.config.name }}-${{ matrix.python.name }}
          path: dist/*.whl

      - name: Upload source archive
        uses: actions/upload-artifact@v2
        if: matrix.config.name == 'darwin' && matrix.python.name == 'cp39'
        with:
          name: pypowsybl-sources
          path: dist/*.tar.gz

  package:
    name: Package wheels
    runs-on: ubuntu-latest
    needs: [manylinux_build, macos_windows_build]

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: download

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: pypowsybl-wheels
          path: |
            download/**/*.whl
            download/**/*.tar.gz

      - name: Release on PyPi
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          python -m pip install --user --upgrade twine
          python -m twine upload --username __token__ --password ${{ secrets.PYPI_TOKEN }} download/*/*.whl
          python -m twine upload --username __token__ --password ${{ secrets.PYPI_TOKEN }} download/*/*.tar.gz
