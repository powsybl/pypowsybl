name: Release

on:
  release:
    types:
      - created
      - released

permissions:
  contents: write
  
jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64:2024-11-16-d70d8cd
    strategy:
      matrix:
        python:
          - {
            name: cp38,
            abi: cp38,
            version: '3.8',
          }

    steps:
      - name: Install Linux Packages
        run: dnf install -y wget

      - name: Install Maven
        run: |
          wget https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz -P /tmp
          tar xf /tmp/apache-maven-*.tar.gz -C /opt
          echo /opt/apache-maven-3.9.6/bin >> $GITHUB_PATH

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.12'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        run: |
          python3 setup.py bdist_wheel
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Run basic pypowsybl import
        working-directory: ./tests
        run: python3 basic_import_test.py

      - name: Upload binaries
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/binaries.zip
          asset_name: binaries-${{ github.event.release.tag_name }}-linux.zip
          asset_content_type: application/zip

  macos_windows_build:
    name: Build ${{ matrix.config.name }} ${{ matrix.python.name }} wheel
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: darwin,
            os: macos-13,
          }
          - {
            name: darwin-arm64,
            os: macos-14,
            macosx_deployment_target: "11", # first arm64 version of macosx
            bdist_wheel_args: "--plat-name macosx-11.0-arm64", # needed to avoid the wheel to be named -universal2
          }
          - {
            name: windows,
            os: windows-2022,
          }
        python:
          - {
            name: cp38,
            version: '3.8',
          }

    steps:
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.12'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build wheel
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.16" # to ensure pip finds wheel when Big Sur is configured to return 10.16 as version instead of 11.0
        run: python setup.py bdist_wheel

      - name: Install wheel
        shell: bash
        run: python -m pip install dist/*.whl --user

      - name: Run basic pypowsybl import
        working-directory: ./tests
        run: python3 basic_import_test.py

      - name: Upload binaries
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/binaries.zip
          asset_name: binaries-${{ github.event.release.tag_name }}-${{ matrix.config.name }}.zip
          asset_content_type: application/zip