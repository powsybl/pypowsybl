name: Dev CI

on:
  push:
    branches:
      # on all branches except main where full build will be run
      - '*'
      - '!main'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_24_x86_64
    strategy:
      matrix:
        python:
          - {
            name: cp310,
            abi: cp310,
            version: '3.10',
          }

    steps:
      - name: Install Linux packages
        run: |
          apt-get update
          apt install -y maven zlib1g-dev

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '11'
          components: 'native-image'

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Build wheel
        run: |
          python3 setup.py bdist_wheel
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Run tests
        working-directory: ./tests # Run in subdir to use installed lib, not sources
        run: |
          pytest

      - name: Type checking
        run: mypy -p pypowsybl

      - name: Dev install  # In order to generate coverage and linting, we need to install in sources
        run: |
          pip3 uninstall -y pypowsybl
          python3 setup.py develop

      - name: Generate coverage
        run: |
          coverage run -m pytest tests/
          coverage xml

      - name: Linting
        run: pylint pypowsybl

      - name: Sonar analysis
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Run doc examples
        working-directory: ./docs
        run: make doctest

